import logging
from threading import Thread
from flask import Flask
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, ContextTypes, ChatJoinRequestHandler

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
BOT_TOKEN = "8377374186:AAH9mLRNJxS6VjIvdWkxlFJkoRU5a0lEpSM"
CHANNEL_ID = -1001989783724  # ID –∫–∞–Ω–∞–ª–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏
GROUP_ID = -1002873957981    # ID –≥—Ä—É–ø–ø—ã –¥–ª—è –∞–≤—Ç–æ–ø—Ä–∏–Ω—è—Ç–∏—è –∑–∞—è–≤–æ–∫
GROUP_INVITE_LINK = "https://t.me/+W60fzUwV7DE2YTZi"  # –í–∞—à–∞ –≥–æ—Ç–æ–≤–∞—è —Å—Å—ã–ª–∫–∞

# –§–∏–∫—Å –¥–ª—è Render Free Tier (–ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç "–∑–∞—Å—ã–ø–∞–Ω–∏–µ")
keep_alive = Flask(__name__)

@keep_alive.route('/')
def home():
    return "Bot keep-alive is active!"

def run_flask():
    keep_alive.run(host='0.0.0.0', port=5000)

Thread(target=run_flask, daemon=True).start()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    try:
        await update.message.reply_text(f"üîç –ü—Ä–æ–≤–µ—Ä—è—é –ø–æ–¥–ø–∏—Å–∫—É, {user.first_name}...")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ —Å —Ç–∞–π–º–∞—É—Ç–æ–º
        try:
            chat_member = await context.bot.get_chat_member(
                chat_id=CHANNEL_ID,
                user_id=user.id,
                read_timeout=10,
                write_timeout=10
            )
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏: {e}")
            await update.message.reply_text("‚åõ –°–µ—Ä–≤–µ—Ä –ø–µ—Ä–µ–≥—Ä—É–∂–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —á–µ—Ä–µ–∑ –º–∏–Ω—É—Ç—É.")
            return

        if chat_member.status not in ["member", "administrator", "creator"]:
            await update.message.reply_text("‚ùå –í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π –∫–∞–Ω–∞–ª!")
            return

        # –ö—Ä–∞—Å–∏–≤–æ–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–Ω–æ–ø–∫–æ–π
        keyboard = [
            [InlineKeyboardButton("üëâ –ü–†–ò–°–û–ï–î–ò–ù–ò–¢–¨–°–Ø –ö –ì–†–£–ü–ü–ï", url=GROUP_INVITE_LINK)]
        ]
        
        await context.bot.send_message(
            chat_id=user.id,
            text="‚úÖ <b>–î–æ—Å—Ç—É–ø –æ—Ç–∫—Ä—ã—Ç!</b>\n\n–ñ–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:",
            reply_markup=InlineKeyboardMarkup(keyboard),
            parse_mode='HTML',
            disable_web_page_preview=True
        )
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.id} –ø–æ–ª—É—á–∏–ª —Å—Å—ã–ª–∫—É")

    except Exception as e:
        logger.critical(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        await update.message.reply_text("üî¥ –ü—Ä–æ–∏–∑–æ—à–ª–∞ —Å–∏—Å—Ç–µ–º–Ω–∞—è –æ—à–∏–±–∫–∞. –ê–¥–º–∏–Ω —É–≤–µ–¥–æ–º–ª–µ–Ω.")

async def handle_join_request(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.chat_join_request.from_user
    try:
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏
        chat_member = await context.bot.get_chat_member(
            CHANNEL_ID,
            user.id,
            read_timeout=10
        )
        
        if chat_member.status in ["member", "administrator", "creator"]:
            await update.chat_join_request.approve()
            await context.bot.send_message(
                chat_id=user.id,
                text="üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –≥—Ä—É–ø–ø—É!"
            )
            logger.info(f"–ó–∞—è–≤–∫–∞ –æ–¥–æ–±—Ä–µ–Ω–∞: {user.id}")
        else:
            await update.chat_join_request.decline()
            await context.bot.send_message(
                chat_id=user.id,
                text="‚ùå –í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π –∫–∞–Ω–∞–ª!"
            )
            logger.info(f"–ó–∞—è–≤–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞: {user.id}")

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞—è–≤–∫–∏: {e}")

def main():
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å —Ç–∞–π–º–∞—É—Ç–∞–º–∏
    app = Application.builder() \
        .token(BOT_TOKEN) \
        .read_timeout(20) \
        .write_timeout(20) \
        .build()
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    app.add_handler(CommandHandler("start", start))
    app.add_handler(ChatJoinRequestHandler(handle_join_request))
    
    logger.info("üü¢ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω | –í–µ—Ä—Å–∏—è 3.2 | Render Fix")
    app.run_polling(
        close_loop=False,
        drop_pending_updates=True
    )

if __name__ == "__main__":
    main()
